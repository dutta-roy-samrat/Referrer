name: Referrer Backend

on:
  push:
    branches:
      - main
    paths:
      - "backend/**" 
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Extract Environment Variables
        id: env-vars
        run: |
          echo "Fetching secret file from Render API..."
          if ! SECRET_CONTENT=$(curl -s -f -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            "https://api.render.com/v1/services/${{ secrets.BACKEND_SERVICE_ID }}/secret-files" \
            | jq -r '.[0].secretFile.content'); then
            echo "Failed to fetch secrets from Render API"
            exit 1
          fi

          while read -r line; do
            key=$(echo "$line" | cut -d'=' -f1 | xargs)
            value=$(echo "$line" | cut -d'=' -f2- | sed 's/^[[:space:]]*"//;s/"[[:space:]]*$//')
            echo "$key=$value" >> $GITHUB_ENV
          done <<< "$SECRET_CONTENT"

      - name: Create Environment File
        run: |
          cd backend
          touch .env
          
          # Django core settings
          echo "SECRET_KEY=${{ env.SECRET_KEY }}" >> .env
          echo "DEBUG=${{ env.DEBUG }}" >> .env
          echo "ALLOWED_HOSTS=${{ env.ALLOWED_HOSTS }}" >> .env
          echo "ENVIRONMENT=${{ env.ENVIRONMENT }}" >> .env
          
          # Database settings
          echo "DB_USER=${{ env.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ env.DB_PASSWORD }}" >> .env
          echo "DB_HOST=${{ env.DB_HOST }}" >> .env
          echo "DB_NAME=${{ env.DB_NAME }}" >> .env
          
          # Email settings
          echo "BREVO_EMAIL_HOST_USER=${{ env.BREVO_EMAIL_HOST_USER }}" >> .env
          echo "BREVO_EMAIL_HOST_PASSWORD=${{ env.BREVO_EMAIL_HOST_PASSWORD }}" >> .env
          echo "BREVO_DEFAULT_EMAIL=${{ env.BREVO_DEFAULT_EMAIL }}" >> .env
          
          # Security settings
          echo "CORS_ALLOWED_ORIGINS=${{ env.CORS_ALLOWED_ORIGINS }}" >> .env
          echo "CSRF_TRUSTED_ORIGINS=${{ env.CSRF_TRUSTED_ORIGINS }}" >> .env
          echo "FRONTEND_DOMAIN=${{ env.FRONTEND_DOMAIN }}" >> .env
          
          echo "Environment file created successfully"

      - name: Build Docker Image
        run: |
          cd backend
          docker build -t referrer-backend --build-arg ENVIRONMENT=${{ env.ENVIRONMENT }} .

      - name: Push Docker Image
        run: |
          docker tag referrer-backend ${{ secrets.DOCKER_USERNAME }}/referrer-backend
          docker push ${{ secrets.DOCKER_USERNAME }}/referrer-backend

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Production
        run: curl -X POST https://api.render.com/deploy/${{secrets.BACKEND_SERVICE_ID}}?key=${{ secrets.BACKEND_RENDER_DEPLOY_HOOK }}
